---
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ include "pvault-server.fullname" . }}-variables
  labels:
    {{- include "pvault-server.labels" . | nindent 4 }}
data:
  pvault.system.toml: |
    # -----------------------------
    # Piiano Vault configuration file
    # -----------------------------

    devmode = {{ .Values.devmode }}

    [db]
    hostname    = {{ required "A valid .Values.db.name entry required!" .Values.db.hostname | quote }}
    name        = {{ required "A valid .Values.db.hostname entry required!" .Values.db.name | quote }}
    user        = {{ required "A valid .Values.db.user entry required!" .Values.db.user | quote }}
    password    = {{ required "A valid .Values.db.password entry required!" .Values.db.password | quote }}
    port        = {{ .Values.db.port }}
    {{- if kindIs "bool" .Values.db.requireTLS }}
    require_tls = {{ .Values.db.requireTLS }}
    {{ end }}

    [service]
    listen_addr         = "0.0.0.0:8123"
    admin_api_key       = {{ .Values.app.adminAPIKey | quote }}
    {{- if kindIs "bool" .Values.app.adminMayReadData }}
    admin_may_read_data = {{ .Values.app.adminMayReadData }}
    {{ end }}
    timeout_seconds     = {{ .Values.app.timeoutSeconds }}
    cache_refresh_interval_seconds = {{ .Values.app.cacheRefreshIntervalSeconds }}
    default_page_size   = {{ .Values.app.defaultPageSize }}
    max_page_size       = {{ .Values.app.maxPageSize }}
    license             = {{ required "A valid .Values.app.license entry required!" .Values.app.license | quote }}


    [tls]
    {{- if kindIs "bool" .Values.tls.enable }}
    enable = {{ .Values.tls.enable }}
    {{ end }}
    cert_file   = {{ .Values.tls.certFile | quote }}
    key_file    = {{ .Values.tls.keyFile | quote }}
    selfsigned  = {{ .Values.tls.selfsigned }}

    [features]
    encryption          = {{ .Values.features.encryption }}
    api_key_hashing     = {{ .Values.features.apiKeyHashing }}
    policy_enforcement  = {{ .Values.features.policyEnforcement }}
    mask_license        = {{ .Values.features.maskLicense }}
    custom_types_enable = {{ .Values.features.customTypesEnable }}

    [kms]
    uri   = {{ .Values.kms.uri | quote }}
    seed  = {{ .Values.kms.seed | quote }}

    [log]
    level               = {{ .Values.log.level | quote }}
    datadog_enable      = {{ .Values.log.datadogEnable }}
    datadog_env         = {{ .Values.log.datadogEnv | quote }}
    datadog_apm_enable  = {{ .Values.log.datadogAPMEnable }}
    customer_env        = {{ .Values.log.customerEnv | quote }}
    customer_identifier = {{ .Values.log.customerIdentifier | quote }}

    [sentry]
    enable = {{ .Values.sentry.enable }}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ include "pvault-server.fullname" . }}-env-vars
  labels:
    {{- include "pvault-server.labels" . | nindent 4 }}
{{- with .Values.extraEnvVars }}
data:
  {{- toYaml . | nindent 2 }}
{{- end }}